export default {
  changePopupLoading(state, payload) {
    state.popupLoading = payload;
  },
  changeShowEdit(state, payload) {
    state.showEdit = payload;
  },
  changePageWait(state, payload) {
    state.pageWait = payload;
  },
  changeTableLoading(state, payload) {
    state.tableLoading = payload;
  },
  changeTotal(state, payload) {
    state.total = payload;
  },
  changeCurrent(state, payload) {
    if (payload && payload != state.current) {
      state.current = payload;
    }
  },
  changePageSize(state, payload) {
    if (payload && payload != state.page_size) {
      state.page_size = payload;
    }
  },
  changeSearchType(state, payload) {
    state.searchType = payload;
  },
  clearSearchData(state, payload) {
    state.searchType = false;
    state.searchData = {
      SENDER_NAME: "",
      SENDER_MOBILE: "",
    };
  },
  isNewData(state, payload) {
    state.orderData = {
      crmnameId: "",
      original_orderno: "",
      sendername: "",
      sendermobile: "",
      receivername: "",
      receivermobile: "",
      receiver_prov: "",
      receiver_city: "",
      receiver_county: "",
      receiver_address: "",
      marryName: "",
      itemsvalue: "0",
      totaldiversity: "0",
      delivery_way_id: "",
      payway: "1"
    };
  },
  add(state, payload){
    state.tableData.push(Object.assign({}, state.byIdData));
  },
  deleteData(state, payload) {
    state.tableData = state.tableData.filter(item => item.id != payload);
  },
  newAddTable(state, payload) {
    state.byIdData = {
      id: state.tableData.length > 0 ? (state.tableData[ state.tableData.length-1 ].id+1) : 0,
      itemname: "",
      itemnum: "",
      weight: ""
    };
  }
};
