<template>
  <div
    :class="'pageBody' + (pageWait ? ' wait' : '')"
    id="transhipmentquery"
  >
    <div class="layout-page-tool">
      <div class="quickSearch" v-if="showQuickSearch">
        <span class="title">订单号：</span>
        <span class="info">
          <i-input v-model="quickSearchData.orderno" placeholder="订单号" clearable></i-input>
        </span>
        <Button type="info" @click="search()">
          <Icon type="ios-search" /> 快速查询
        </Button>
      </div>
      <search-box ref="searchBox"></search-box>
    </div>
    <div class="layout-page-content">
      <Table
        border
        stripe
        :loading="tableLoading"
        :height="table.height"
        :columns="table.columns"
        :data="tableData"
        :highlight-row="true"
      >
      </Table>
    </div>
    <div class="layout-page-page">
      <Page
        :total="total"
        :current="current"
        :page-size="page_size"
        :page-size-opts="page.page_sizepts"
        @on-change="page_change"
        @on-page-size-change="page_size_change"
        show-sizer
        show-elevator
        show-total
        size="small"
      >
      </Page>
    </div>
    <popup-delete ref="popupDelete"></popup-delete>
  </div>
</template>
<script>
import searchBox from "./components/searchBox.vue";
import popupDelete from "components/situation/popup-delete";
import { getTableHeight } from "tool/tool.js";
export default {
  name: "transhipmentquery",
  data() {
    return {
      showQuickSearch: false,
      delModel: {},
      table: {
        height: 500,
        columns: [
          { type: "index", width: 50, align: "center" },
          { title: "订单号", key: "ORDERNO", align: "center" },
          { title: "物流公司名称", key: "TRANCOMPANYNAME", align: "center" },
          { title: "转运单号", key: "TRANORDERNO", align: "center" },
          { title: "转运状态", key: "TRANSTATUS", align: "center" },
          { title: "转运完成时间", key: "TRAENDDATE", align: "center" },
          {
            title: "操作",
            key: "action",
            width: 100,
            align: "center",
          }
        ]
      },
      page: {
        page_sizepts: [50, 100, 200]
      }
    };
  },
  components: {
    popupDelete,
    searchBox
  },
  computed: {
    tableData() {
      return this.$store.state.transhipmentquery.tableData;
    },
    tableLoading() {
      return this.$store.state.transhipmentquery.tableLoading;
    },
    current() {
      return this.$store.state.transhipmentquery.current;
    },
    page_size() {
      return this.$store.state.transhipmentquery.page_size;
    },
    total() {
      return this.$store.state.transhipmentquery.total;
    },
    pageWait() {
      return this.$store.state.transhipmentquery.pageWait;
    },
    quickSearchData(){
      return this.$store.state.transhipmentquery.quickSearchData;
    }
  },
  activated() {
    if (this.$store.getters["pageTab/pageInTab"]("transhipmentquery")) {
      this.$store.dispatch({ type: "transhipmentquery/refreshData" });
      this.$store.dispatch({ type: "selectData/getData",name:"trancompanyid" });
      this.$store.dispatch({ type: "selectData/getData",name:"transtatus" });
    }
  },
  mounted() {
    this.$store.commit("transhipmentquery/clearSearchData");
    this.showQuickSearch = true;
    this.table.height = getTableHeight();
  },
  methods: {
    page_change(newPage) {
      if (!this.tableLoading) {
        this.$store.dispatch({
          type: "transhipmentquery/refreshData",
          current: newPage
        });
      }
    },
    page_size_change(newPageSiae) {
      if (!this.tableLoading) {
        this.$store.dispatch({
          type: "transhipmentquery/refreshData",
          current: 1,
          page_size: newPageSiae
        });
      }
    },
    search() {
      this.$store.dispatch({
        type: 'transhipmentquery/refreshData',
        searchType: this.quickSearchData.orderno,
        current: 1
      });
    },
    add() {
      this.$refs.popupEdit.open();
    }
  }
};
</script>

<style>
</style>
