import {
  makeSelectOptions,
  makeTreeInfo
} from "tool/tool.js";
export default {
  changePopupLoading(state, payload) {
    state.popupLoading = payload;
  },
  changeShowEdit(state, payload) {
    state.showEdit = payload;
  },
  changeShowCheck(state, payload) {
    state.showCheck = payload;
  },
  changePageWait(state, payload) {
    state.pageWait = payload;
  },
  getData(state, payload) {
    if (payload.worked == 'table') {
      state.tableData = payload.data;
    }
  },
  gettableById( state, payload){
    state.tableByIdData = state.tableData.filter(item => item.DELIVERY_WAY_ID == payload)[0];
  },
  getByIdData(state, payload) {
    state.byIdData = payload.data[0];
    this.commit('deliverymanage/gettableById',payload.id);
    state.byIdData.POSITION = state.tableByIdData.POSITION;
    state.byIdData.DELIVERY_LOGISTICS_COMPANY_ID =this.getters["selectData/findData"]({name: "DELIVERY_LOGISTICS_COMPANY_ID", label: state.tableByIdData.DELIVERY_LOGISTICS_COMPANY_ID});
    state.byIdData.RULE_NM = state.tableByIdData.RULE_NM;
    state.byIdData.IS_ENABLE = state.tableByIdData.IS_ENABLE;
    state.byIdData.DESCR = state.tableByIdData.DESCR;
  },
  changeTableLoading(state, payload) {
    state.tableLoading = payload;
  },
  changeTotal(state, payload) {
    state.total = payload;
  },
  changeCurrent(state, payload) {
    if (payload && payload != state.current) {
      state.current = payload;
    }
  },
  changePageSize(state, payload) {
    if (payload && payload != state.page_size) {
      state.page_size = payload;
    }
  },
  isNewData(state, payload) {
    state.byIdData = {
      RULE_NM: "",
      DELIVERY_LOGISTICS_COMPANY_ID: "",
      POSITION: "",
      DESCR: "",
      IS_ENABLE: "",
      FIRST_WEIGHT:"",
      FIRST_WEIGHT_PRICE: "",
      CONTINUE_WEIGHT: "",
      CONTINUE_WEIGHT_PRICE: "",
      IS_SUPPORT_COD: "N"
    };
  }
};
