<template>
  <Modal v-model="showModuleEdit" :mask-closable="!1" draggable :transfer="!1" @on-visible-change="visibleChange" :closable="!popupLoading" :class-name="(id ? 'yellow' : 'green') + (popupLoading ? ' popupLoading' : '')" width="340">
    <p slot="header">
      <span class="fa fa-edit" v-if="id"></span>
      <Icon type="ios-add-circle-outline" v-else></Icon>
      <span>添加关键字</span>
    </p>
    <Form :model="byIdData" :label-width="100" :rules="ruleValidate" ref="editForm">
      <Row>
        <i-col span="24">
          <FormItem label="关键字：">
            <i-input v-model="byIdData.keyword" placeholder="请填写机构名称"></i-input>
          </FormItem>
        </i-col>
      </Row>
    </Form>
    <div slot="footer">
      <Button type="success" @click="onOk" :loading="popupLoading">保存</Button>
      <Button type="error" @click="onCancel" :loading="popupLoading">关闭</Button>
    </div>
  </Modal>
</template>
<script>
import { eltValidators } from "tool/eltValidators.js";
export default {
  data() {
    return {
      id: false,
      ruleValidate: {
        keyword: [{ required: true, message: "请添加关键字" }],
      }
    };
  },
  computed: {
    byIdData() {
      return this.$store.state.moduleConfiguration.byIdData;
    },
    showModuleEdit: {
      get: function() {
        return this.$store.state.moduleConfiguration.showModuleEdit;
      },
      set: function(val) {
        this.$store.commit("moduleConfiguration/changeshowModuleEdit", val);
      }
    },
    popupLoading() {
      return this.$store.state.moduleConfiguration.popupLoading;
    }
  },
  mounted() {
    // console.log(this.$store.state.selectData)
  },
  methods: {
    open() {
      this.result();
      this.$store.commit("moduleConfiguration/changeshowModuleEdit", true);
    },
    result() {
      this.$refs["editForm"].resetFields();
    },
    onOk() {
      this.$refs["editForm"].validate(valid => {
        if (valid) {
          this.$store.dispatch({ type: "moduleConfiguration/saveData", id: this.id });
        }
      });
    },
    onCancel() {
      this.$store.commit("moduleConfiguration/changeshowModuleEdit", false);
    },
    visibleChange(val) {
      this.$store.commit("moduleConfiguration/changePageWait", val);
    }
  }
};
</script>
<style scoped>
.isEdit {
  background: #ccc;
}
</style>