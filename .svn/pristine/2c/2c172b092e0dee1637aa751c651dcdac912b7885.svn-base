import {
  makeAjaxUrl,
  forEachToJson,
  makeGetAjaxUrl,
  timeText
} from "tool/tool.js";
import api from "controller/api/api.js";
const apiInfo = api.DispatchingManagement.orderassign;
export default {
  getData: (state, getters, rootState, rootGetters) => (option) => {
    var ajaxData = {
      "rows": option && option.page_size ? option.page_size : (state.page_size || 50),
      "page": option && option.current ? option.current : (state.current || 1)
    };
    if( state.searchType ){
      forEachToJson(state.searchData, (key, v) => {
        if( Boolean(v) || typeof(v) == "number" ){
          if(key == "create_date" || key == "update_date"){
            ajaxData[key] = timeText(v);
          }else{
            ajaxData[key] = v;
          }
        }
      });
      var quickSearch = {};
      forEachToJson(state.quickSearchData, (key, v) => {
        if( Boolean(v) || typeof(v) == "number" ){
          quickSearch[key] = v;
        }
      });
    }
    return {
      method: apiInfo.getData.method,
      url: apiInfo.getData.url + (makeGetAjaxUrl(quickSearch) != "?" ? makeGetAjaxUrl(quickSearch) : ""),
      data: makeAjaxUrl(ajaxData)
    };
  },
  getByIdData: (state, getters, rootState, rootGetters) => (option) => {
    return {
      method: apiInfo.getByIdData.method,
      url: apiInfo.getByIdData.url,
      data: makeAjaxUrl({
        id: option.id
      })
    };
  },
  saveNew: (state, getters, rootState, rootGetters) => (option) => {
    return {
      method: apiInfo.saveNew.method,
      url: apiInfo.saveNew.url,
      data: makeAjaxUrl({
        carno: state.byIdData.CARNO,
        carlength: state.byIdData.CARLENGTH,
        totalweight: state.byIdData.TOTALWEIGHT,
      })
    };
  },
  saveEdit: (state, getters, rootState, rootGetters) => (option) => {
    console.log("saveEdit:",option);
    console.log("byIdData:",rootState.selectData.carnolist);
    let carnolist=rootState.selectData.carnolist;
    let carinfo=carnolist.filter(item=>item.value.CAROWNER_ID===state.byIdData.CARNO)[0].value;
    console.log("carinfo:",carinfo);
    return {
      method: apiInfo.saveEdit.method,
      url: apiInfo.saveEdit.url,
      data: makeAjaxUrl({
        //carno: rootGetters["selectData/findData"]({name: "carnolist", value: state.byIdData.CARNO}),
        carid:state.byIdData.CARNO,
        carno:carinfo.CARNO,
        routeid:option.id,
        carownernm:carinfo.CAROWNER_NM,
        carownertel: state.byIdData.CAROWNER_TEL,
        carfee: state.byIdData.CAR_FEE,
      })
    };
  },
  delete: (state, getters, rootState, rootGetters) => (option) => {
    return {
      method: apiInfo.delete.method,
      url: apiInfo.delete.url,
      data: makeAjaxUrl({
        ids: option.id
      })
    };
  },
  revoke: (state, getters, rootState, rootGetters) => (option) => {
    return {
      method: apiInfo.revoke.method,
      url: apiInfo.revoke.url,
      data: makeAjaxUrl({
        routeid: option.id
      })
    };
  }
};
