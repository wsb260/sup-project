<template>
  <Modal v-model="showEdit" :mask-closable="!1" draggable :transfer="!1" @on-visible-change="visibleChange" :closable="!popupLoading" :class-name="(id ? 'yellow' : 'green') + (popupLoading ? ' popupLoading' : '')" width="740">
    <p slot="header">
      <span class="fa fa-edit" v-if="id"></span>
      <Icon type="ios-add-circle-outline" v-else></Icon>
      <span>{{'车辆信息' + (id ? '修改' : '新增')}}</span>
    </p>
    <Form :model="byIdData" :label-width="100" :rules="ruleValidate" ref="editForm">
      <Row>
       <i-col span="12">
          <FormItem label="车主姓名：" prop="CAROWNER_NM">
            <Select v-model="byIdData.CAROWNER_NM" placeholder="请输入车主姓名">
              <Option v-for="item in CAROWNER_NM" :value="item.value" :key="item.value">{{item.label}}</Option>
            </Select>
          </FormItem>
        </i-col>
        <i-col span="12">
          <FormItem label="车主电话：" prop="CAROWNER_TEL">
            <i-input v-model="byIdData.CAROWNER_TEL" placeholder="请输入车主电话"></i-input>
          </FormItem>
        </i-col>
      </Row>
      <Row>
       <i-col span="12">
          <FormItem label="证件类型：" prop="CARDTYPE">
            <Select v-model="byIdData.CARDTYPE" placeholder="请选择证件类型">
              <Option v-for="item in CARDTYPE" :value="item.value" :key="item.value">{{item.label}}</Option>
            </Select>
          </FormItem>
        </i-col>
        <i-col span="12">
          <FormItem label="证件号码：" prop="CAROWNER_CARDNO">
            <i-input v-model="byIdData.CAROWNER_CARDNO" placeholder="请输入证件号码"></i-input>
          </FormItem>
        </i-col>
      </Row>
      <Row>
       <i-col span="12">
          <FormItem label="承运商：" prop="BLCNAME">
            <Select v-model="byIdData.SERVNAME" placeholder="请选择承运商">
              <Option v-for="item in BLCNAME" :value="item.value" :key="item.value">{{item.label}}</Option>
            </Select>
          </FormItem>
        </i-col>
        <i-col span="12">
          <FormItem label="车辆类型：" prop="CARTYPE">
            <Select v-model="byIdData.CARTYPE" placeholder="请选择车辆类型">
              <Option v-for="item in CARTYPE" :value="item.value" :key="item.value">{{item.label}}</Option>
            </Select>
          </FormItem>
        </i-col>
      </Row>
       <Row>
        <i-col span="12">
          <FormItem label="车牌号码：" prop="CARNO">
            <i-input v-model="byIdData.CARNO" placeholder="请输入车牌号码"></i-input>
          </FormItem>
        </i-col>
        <i-col span="12">
          <FormItem label="车辆长度：" prop="CARLENGTH">
            <i-input v-model="byIdData.CARLENGTH" placeholder="请输入车辆长度（单位：米）"></i-input>
          </FormItem>
        </i-col>
      </Row>
      <Row>
         <i-col span="12">
          <FormItem label="总载重：" prop="TOTALWEIGHT">
            <i-input v-model="byIdData.TOTALWEIGHT" placeholder="请输入总载重（单位：吨）"></i-input>
          </FormItem>
        </i-col>
         <i-col span="12">
          <FormItem label="出厂日期：" prop="FACTORYDATE">
            <DatePicker type="date" v-model="byIdData.FACTORYDATE" placeholder="请选择出厂日期"></DatePicker>
          </FormItem>
        </i-col>
      </Row>
      <Row>
         <i-col span="12">
          <FormItem label="运营日期：" prop="WORKDATE">
            <DatePicker type="date" v-model="byIdData.WORKDATE" placeholder="请选择运营日期"></DatePicker>
          </FormItem>
        </i-col>
      </Row>
    </Form>
    <div slot="footer">
      <Button type="success" @click="onOk" :loading="popupLoading">保存</Button>
      <Button type="error" @click="onCancel" :loading="popupLoading">关闭</Button>
    </div>
  </Modal>
</template>
<script>
import { eltValidators } from "tool/eltValidators.js";
export default {
  data() {
    return {
      id: false,
      citys: true,
      countys: true,
      ruleValidate: {
        CAROWNER_NM: [{ required: true, message: "请选择车主姓名！" }],
        CAROWNER_TEL: [{ required: true, message: "请输入车主电话号码！" },
        {
            validator: eltValidators,
            notEmpty: true,
            rules: [
              { name: "mobilephone", message: "请输入正确格式的11位手机号码！", info: "" },
              ]
          }],
        SERVNAME: [{ required: true, message: "请选择承运商！" }],
        CARLENGTH:[{
            validator: eltValidators,
            notEmpty: true,
            rules: [
              { name: "number", message: "", info: "" },
              ]
          }],
        CAROWNER_CARDNO:[{
            validator: eltValidators,
            notEmpty: true,
            rules: [
              { name: "maxLength", message: "证件号长度最大30位！", info: "30" },
              ]
          }],
        TOTALWEIGHT:[{
            validator: eltValidators,
            notEmpty: true,
            rules: [
              { name: "number", message: "", info: "" },
              { name: "maxValue", message: "车辆总载重不得超过100吨！", info: "100" },
              ]
          }],
        CARLENGTH:[{
            validator: eltValidators,
            notEmpty: true,
            rules: [
              { name: "number", message: "", info: "" },
              { name: "maxValue", message: "车辆长度不得超过50米！", info: "50" },
              ]
          }],
        CARNO: [{ required: true, message: "请输入车牌号码！" },{
            validator: eltValidators,
            notEmpty: true,
            rules: [
              { name: "maxLength", message: "车牌号码最大8位！", info: "8" },
              ]
          }],
        PASSWORD: [{ required: true, message: "请输入登录密码！" }],
      }
    };
  },
  computed: {
    byIdData() {
      return this.$store.state.deliveryresource.byIdData;
    },
    CAROWNER_NM() {
      return this.$store.state.selectData.carowner_nm
    }, 
    CARTYPE() {
      return this.$store.state.selectData.cartype;
    },
    CARDTYPE() {
      return this.$store.state.selectData.cardtype;
    },
    BLCNAME() {
      return this.$store.state.selectData.blcname;
    },
    showEdit: {
      get: function() {
        return this.$store.state.deliveryresource.showEdit;
      },
      set: function(val) {
        this.$store.commit("deliveryresource/changeShowEdit", val);
      }
    },
    popupLoading() {
      return this.$store.state.deliveryresource.popupLoading;
    }
  },
  mounted() {
  },
  methods: {
    open(id) {
      this.id = id || false;
      this.result();
      if (this.id) {
        this.$store.dispatch({ type: "deliveryresource/getByIdData", id: this.id });
      } else {
        this.$store.commit({ type: "deliveryresource/isNewData" });
      }
      this.$store.commit("deliveryresource/changeShowEdit", true);
    },
    result() {
      this.$refs["editForm"].resetFields();
    },
    onOk() {
      this.$refs["editForm"].validate(valid => {
        if (valid) {
          this.$store.dispatch({ type: "deliveryresource/saveData", id: this.id });
        }
      });
    },
    onCancel() {
      this.$store.commit("deliveryresource/changeShowEdit", false);
    },
    visibleChange(val) {
      this.$store.commit("deliveryresource/changePageWait", val);
    }
  }
};
</script>
