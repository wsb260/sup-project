<template>
  <Modal v-model="showEdit" :mask-closable="!1" draggable :transfer="!1" @on-visible-change="visibleChange" :closable="!popupLoading" :class-name="(id ? 'yellow' : 'green') + (popupLoading ? ' popupLoading' : '')" width="740">
    <p slot="header">
      <span class="fa fa-edit" v-if="id"></span>
      <Icon type="ios-add-circle-outline" v-else></Icon>
      <span>异常审批信息</span>
    </p>
    <Form :model="byIdData" :label-width="100" :rules="ruleValidate" ref="editForm">
      <Row>
        <i-col span="12">
          <FormItem label="审批人：" prop="EXAMINENAME">
            <i-input v-model="byIdData.EXAMINENAME" placeholder="请填写审批人"></i-input>
          </FormItem>
        </i-col>
        <i-col span="12">
          <FormItem label="审批金额：" prop="EXAMINE_MONEY">
            <i-input v-model="byIdData.EXAMINE_MONEY" placeholder="请填写审批金额"></i-input>
          </FormItem>
        </i-col>
      </Row>
      <Row>
        <i-col span="12">
          <FormItem label="审批状态：" prop="APPLY_STATUS">
            <Select v-model="byIdData.APPLY_STATUS" placeholder="请选择审批状态">
              <Option v-for="item in APPLY_STATUS" :value="item.value" :key="item.value">{{item.label}}</Option>
            </Select>
          </FormItem>
        </i-col>
        <i-col span="12">
          <FormItem label="备注：" prop="EXAMINE_MONEY">
            <i-input v-model="byIdData.EXAMINE_MONEY" placeholder="请填写备注"></i-input>
          </FormItem>
        </i-col>
      </Row>
    </Form>
    <div slot="footer">
      <Button type="success" @click="onOk" :loading="popupLoading">保存</Button>
      <Button type="error" @click="onCancel" :loading="popupLoading">关闭</Button>
    </div>
  </Modal>
</template>
<script>
import { eltValidators } from "tool/eltValidators.js";
export default {
  data() {
    return {
      id: false,
      ruleValidate: {
        EXAMINENAME: [{ required: true, message: "请填写审批人！" }],
        EXAMINE_MONEY: [
          { required: true, message: "请填写审批金额！" },
          {
              validator: eltValidators,
              rules: [
                { name: "negative_n", message: "", info: "" },
              ]
            }
        ],
        APPLY_STATUS: [{ required: true, message: "请选择审批状态！" }],
        EXAMINE_MONEY: [{ required: true, message: "请填写备注！" }],
      },
      byIdData:{}
    };
  },
  computed: {
    // byIdData() {
    //   return this.$store.state.abnormalcargoexamine.byIdData;
    // },
    APPLY_STATUS() {
      return this.$store.state.selectData.APPLY_STATUS;
    },
    showEdit: {
      get: function() {
        return this.$store.state.abnormalcargoexamine.showEdit;
      },
      set: function(val) {
        this.$store.commit("abnormalcargoexamine/changeShowEdit", val);
      }
    },
    popupLoading() {
      return this.$store.state.abnormalcargoexamine.popupLoading;
    }
  },
  mounted() {
  },
  methods: {
    open(id) {
      this.id = id || false;
      this.result();
      this.$store.commit("abnormalcargoexamine/changeShowEdit", true);
    },
    result() {
      this.$refs["editForm"].resetFields();
    },
    onOk() {
      this.$refs["editForm"].validate(valid => {
        if (valid) {
          this.$store.dispatch({ type: "abnormalcargoexamine/approval", id: this.id });
        }
      });
    },
    onCancel() {
      this.$store.commit("abnormalcargoexamine/changeShowEdit", false);
    },
    visibleChange(val) {
      this.$store.commit("abnormalcargoexamine/changePageWait", val);
    }
  }
};
</script>
<style scoped>
.isEdit {
  background: #ccc;
}
</style>