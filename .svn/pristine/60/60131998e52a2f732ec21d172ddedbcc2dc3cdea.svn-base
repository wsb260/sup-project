<template>
  <Modal v-model="showAdd" :mask-closable="!1" draggable :transfer="!1" @on-visible-change="visibleChange" :closable="!popupLoading" :class-name="(id ? 'yellow' : 'green') + (popupLoading ? ' popupLoading' : '')" width="740">
    <p slot="header">
      <span class="fa fa-edit"></span>
      <span>补录订单信息</span>
    </p>
    <Form :model="byIdData" :label-width="100" :rules="ruleValidate" ref="editForm">
        <Row>
          <i-col span="12">
            <FormItem label="商品名称：" prop="itemname">
              <i-input v-model="byIdData.itemname" placeholder="请输入商品名字"></i-input>
            </FormItem>
          </i-col>
          <i-col span="12">
            <FormItem label="商品数量：" prop="itemnum">
              <i-input v-model="byIdData.itemnum" placeholder="请输入商品数量"></i-input>
            </FormItem>
          </i-col>
        </Row>
        <Row>
          <i-col span="12">
            <FormItem label="商品重量：" prop="wt">
              <i-input v-model="byIdData.wt" placeholder="请输入商品重量"></i-input>
            </FormItem>
          </i-col>
        </Row>
      </Form>
  </Modal>
</template>
<script>
import { eltValidators } from "tool/eltValidators.js";
export default {
  data() {
    return {
      id: false,
      ruleValidate: {
        itemname: [{ required: true, message: "请填写商品名称！" }],
        itemnum: [{ required: true, message: "请填写商品数量！" }],
        wt: [{ required: true, message: "请填写商品重量！" }]
      }
    };
  },
  computed: {
    byIdData() {
      return this.$store.state.orderproductadd.byIdData;
    },
    tableData() {
      return this.$store.state.orderproductadd.tableData;
    },
    tableLoading() {
      return this.$store.state.orderproductadd.tableLoading;
    },
    showAdd: {
      get: function() {
        return this.$store.state.orderproductadd.showAdd;
      },
      set: function(val) {
        this.$store.commit("orderproductadd/changeShowAdd", val);
      }
    },
    popupLoading() {
      return this.$store.state.orderproductadd.popupLoading;
    }
  },
  mounted() {
  },
  methods: {
    open(id) {
      this.id = id || false;
      this.result();
      if (this.id) {
        this.$store.dispatch({ type: "orderproductadd/getByIdData", id: this.id });
      } else {
        this.$store.commit({ type: "orderproductadd/isNewData" });
      }
      this.$store.commit("orderproductadd/changeShowAdd", true);
    },
    result() {
      this.$refs["editForm"];
    },
    visibleChange(val) {
      this.$store.commit("orderproductadd/changePageWait", val);
    }
  }
};
</script>
