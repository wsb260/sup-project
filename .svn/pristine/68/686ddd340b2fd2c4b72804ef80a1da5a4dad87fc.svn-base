import {
  makeAjaxUrl
} from "tool/tool.js";
import api from "controller/api/api.js";
const apiInfo = api.system.deliverymanage;
export default {
  getData: (state, getters, rootState, rootGetters) => (option) => {
    return {
      method: apiInfo.getData.method,
      url: apiInfo.getData.url,
      data: makeAjaxUrl({
        "rows": option && option.page_size ? option.page_size : (state.page_size || 50),
        "page": option && option.current ? option.current : (state.current || 1)
      })
    };
  },
  getByIdData: (state, getters, rootState, rootGetters) => (option) => {
    return {
      method: apiInfo.getByIdData.method,
      url: apiInfo.getByIdData.url,
      data: {
        deliveryWayId: option.id
      }
    };
  },
  saveNew: (state, getters, rootState, rootGetters) => (option) => {
    return {
      method: apiInfo.saveNew.method,
      url: apiInfo.saveNew.url,
      data: {
        //deliveryWayId: "",
        ruleNm: state.byIdData.RULE_NM,
        position: state.byIdData.POSITION,
        descr: state.byIdData.DESCR,
        deliveryLogisticsCompanyId: state.byIdData.DELIVERY_LOGISTICS_COMPANY_ID,
        isEnable: state.byIdData.IS_ENABLE,
        deliveryRules: {
          //deliveryWayId: "",
          //deliveryRuleId: "",
          firstWeight: state.byIdData.FIRST_WEIGHT,
          firstWeightPrice: state.byIdData.FIRST_WEIGHT_PRICE,
          continueWeight: state.byIdData.CONTINUE_WEIGHT,
          continueWeightPrice: state.byIdData.CONTINUE_WEIGHT_PRICE,
          isSupportCod: state.byIdData.IS_SUPPORT_COD,
          isZone: "N",
          //zoneNms: "",
          //deliveryRuleZoneRelationships: []
        },
        deliverWayArray: rootState.deliverymanage.freight.tableData
      }
    };
  },
  saveEdit: (state, getters, rootState, rootGetters) => (option) => {
    return {
      method: apiInfo.saveEdit.method,
      url: apiInfo.saveEdit.url,
      data: {
        deliveryWayId: state.byIdData.DELIVERY_WAY_ID,
        ruleNm: state.byIdData.RULE_NM,
        position: state.byIdData.POSITION,
        descr: state.byIdData.DESCR,
        deliveryLogisticsCompanyId: state.byIdData.DELIVERY_LOGISTICS_COMPANY_ID,
        isEnable: state.byIdData.IS_ENABLE,
        deliveryRules: {
          deliveryWayId: state.byIdData.DELIVERY_WAY_ID,
          deliveryRuleId: state.byIdData.DELIVERY_RULE_ID,
          firstWeight: state.byIdData.FIRST_WEIGHT,
          firstWeightPrice: state.byIdData.FIRST_WEIGHT_PRICE,
          continueWeight: state.byIdData.CONTINUE_WEIGHT,
          continueWeightPrice: state.byIdData.CONTINUE_WEIGHT_PRICE,
          isSupportCod: state.byIdData.IS_SUPPORT_COD,
          isZone: "N",
          //zoneNms: "",
          //deliveryRuleZoneRelationships: []
        },
        deliverWayArray: rootState.deliverymanage.freight.tableData
      }
    };
  }
};
