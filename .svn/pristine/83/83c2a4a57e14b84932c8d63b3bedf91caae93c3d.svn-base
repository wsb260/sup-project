import axios from 'axios';
export default {
  getData({ dispatch, commit, state }, option) {
    var _this = this;
    commit('changeTableLoading', true);
    axios(this.getters['roleandmodule/moduleConfiguration/getData']())
    .then((req1) => {
      _this.dispatch("login/errorLogin", req1.data ).then((type) => {
        if (req1 && req1.data.result && req1.data.result!="false") {
          option.data = req1.data.result;
          commit('getData', option);
          commit('changeTotal', parseInt(req1.data.total, 10) || 0);
        } else {
          _this.commit("notice/dataError", req1.data.mag);
        }
        commit('changeTableLoading', false);
      }).catch((error) => {});
    })
    .catch((error) => {
      _this.commit("notice/dataError", error);
      commit('changeTableLoading', false);
    });
  },
  getByIdData({ dispatch, commit, state }, option) {
    var _this = this;
    commit('isNewData');
    commit('changePopupLoading', true);
    axios(this.getters['roleandmodule/moduleConfiguration/getByIdData'](option))
    .then((req1) => {
      _this.dispatch("login/errorLogin", req1.data ).then((type) => {
        if( req1 && req1.data.leftlist && req1.data.leftlist!="false" ){
          option.data = req1.data.leftlist;
          commit('getByIdData', option);
        }else {
          _this.commit("notice/dataError", req1.data.mag);
        }
        commit('changePopupLoading', false);
      }).catch((error) => {});
    })
    .catch((error) => {
      _this.commit("notice/dataError", error);
      commit('changePopupLoading', false);
    });
  },
  saveData({ dispatch, commit, state }, option) {
    var _this = this;
    commit('changePopupLoading', true);
    axios(this.getters[option.id ? 'roleandmodule/moduleConfiguration/saveEdit' : 'roleandmodule/moduleConfiguration/saveNew']())
    .then((req1) => {
      console.log(req1)
      _this.dispatch("login/errorLogin", req1.data ).then((type) => {
        if (req1.data.success && req1.data.success!="false") {
          _this.commit("notice/saveSuccess");
          dispatch({ type: "refreshData" });
          commit('changeshowModule', false);
        } else {
          _this.commit("notice/saveError", req1.data.mag);
        }
        commit('changePopupLoading', false);
      }).catch((error) => {});
    })
    .catch(function (error) {
      _this.commit("notice/saveError", error);
      commit('changePopupLoading', false);
    });
  },
};
