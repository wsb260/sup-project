<template>
  <Modal v-model="showEdit" :mask-closable="!1" draggable :transfer="!1" @on-visible-change="visibleChange" :closable="!popupLoading" :class-name="(id ? 'yellow' : 'green') + (popupLoading ? ' popupLoading' : '')" width="740">
    <p slot="header">
      <span class="fa fa-edit" v-if="id"></span>
      <Icon type="ios-add-circle-outline" v-else></Icon>
      <span>{{'机构信息' + (id ? '修改' : '新增') }}</span>
    </p>
    <Form :model="byIdData" :label-width="100" :rules="ruleValidate" ref="editForm">
      <Row>
        <i-col span="12">
          <FormItem label="机构名称：" prop="ORGNAME">
            <i-input v-model="byIdData.ORGNAME" placeholder="请填写机构名称"></i-input>
          </FormItem>
        </i-col>
        <i-col span="12">
          <FormItem label="机构类型：" prop="ORGTYPE">
            <Select v-model="byIdData.ORGTYPE" placeholder="请选择机构类型">
              <Option v-for="item in ORGTYPE" :value="item.value" :key="item.value">{{item.label}}</Option>
            </Select>
          </FormItem>
        </i-col>
      </Row>
      <Row>
        <i-col span="12">
          <FormItem label="上级机构：" prop="UPORGNAME">
            <Select v-model="byIdData.UPORGNAME" placeholder="请选择上级机构">
              <Option v-for="item in UPORGNAME" :value="item.value" :key="item.value">{{item.label}}</Option>
            </Select>
          </FormItem>
        </i-col>
        <i-col span="12">
          <FormItem label="区域范围：" prop="ORGAREA">
            <Select v-model="byIdData.ORGAREA" placeholder="请选择区域范围">
              <Option v-for="item in ORGAREA" :value="item.value" :key="item.value">{{item.label}}</Option>
            </Select>
          </FormItem>
        </i-col>
      </Row>
      <Row>
        <i-col span="12">
          <FormItem label="联系人：" prop="LINKMAN">
            <i-input v-model="byIdData.LINKMAN" placeholder="请填写联系人"></i-input>
          </FormItem>
        </i-col>
        <i-col span="12">
          <FormItem label="联系电话：" prop="TEL">
            <i-input v-model="byIdData.TEL" placeholder="请填写联系电话"></i-input>
          </FormItem>
        </i-col>
      </Row>
      <Row>
        <i-col span="12">
          <FormItem label="服务时间：" prop="CREATE_DATE">
            <DatePicker type="date" v-model="byIdData.CREATE_DATE" placeholder="请输入服务时间" ></DatePicker>
          </FormItem>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <FormItem label="联系地址：" prop="ADDRESS">
            <i-input type="textarea" v-model="byIdData.ADDRESS" placeholder="请填写联系地址"></i-input>
          </FormItem>
        </i-col>
        
      </Row>
      <Row>
        <FormItem label="备注：" prop="NOTES">
          <i-input v-model="byIdData.NOTES" placeholder="请填写备注" type="textarea" :rows="3"></i-input>
        </FormItem>

      </Row>
    </Form>
    <div slot="footer">
      <Button type="success" @click="onOk" :loading="popupLoading">保存</Button>
      <Button type="error" @click="onCancel" :loading="popupLoading">关闭</Button>
    </div>
  </Modal>
</template>
<script>
import { eltValidators } from "tool/eltValidators.js";
export default {
  data() {
    return {
      id: false,
      ruleValidate: {
        ORGNAME: [
          { required: true, message: "请输入机构名称！" },
          {
            validator: eltValidators,
            notEmpty: true,
            rules: [
              { name: "maxLength", message: "输入内容最大20位", info: "20" }
            ]
          }
        ],
        ORGTYPE: [{ required: true, message: "请选择机构类型！" }],
        UPORGNAME: [{ required: true, message: "请选择上级机构！" }],
        ORGAREA: [{ required: true, message: "请选择区域范围！" }],
        LINKMAN: [{ required: true, message: "请输入联系人！" }],
        TEL: [
          { required: true, message: "请输入联系电话！" },
          {
            validator: eltValidators,
            notEmpty: true,
            rules: [
              { name: "mobilephone", message: "", info: "" }
            ]
          }
        ],
        ADDRESS: [{ required: true, message: "请输入联系地址！" }],
        CREATE_DATE: [{ required: true, message: "请输入服务时间"}]
      }
    };
  },
  computed: {
    byIdData() {
      return this.$store.state.org.byIdData;
    },
    ORGTYPE() {
      return this.$store.state.selectData.orgtype;
    },
    UPORGNAME() {
      return this.$store.state.selectData.uporgname;
    },
    ORGAREA() {
      return this.$store.state.selectData.orgarea;
    },
    showEdit: {
      get: function() {
        return this.$store.state.org.showEdit;
      },
      set: function(val) {
        this.$store.commit("org/changeShowEdit", val);
      }
    },
    popupLoading() {
      return this.$store.state.org.popupLoading;
    }
  },
  mounted() {
  },
  methods: {
    open(id) {
      this.id = id || false;
      this.result();
      if (this.id) {
        this.$store.dispatch({ type: "org/getByIdData", id: this.id });
      } else {
        this.$store.commit({ type: "org/isNewData" });
      }
      this.$store.commit("org/changeShowEdit", true);
    },
    result() {
      this.$refs["editForm"].resetFields();
    },
    onOk() {
      this.$refs["editForm"].validate(valid => {
        if (valid) {
          this.$store.dispatch({ type: "org/saveData", id: this.id });
        }
      });
    },
    onCancel() {
      this.$store.commit("org/changeShowEdit", false);
    },
    visibleChange(val) {
      this.$store.commit("org/changePageWait", val);
    }
  }
};
</script>
