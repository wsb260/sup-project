import axios from 'axios';
export default {
  refreshData({ dispatch, commit, state }, option) {
    if (option) {
      option = {
        current: (option.current ? option.current : state.current),
        page_size: (option.page_size ? option.page_size : state.page_size),
        searchType:  (option.searchType ? option.searchType : state.searchType)
      };
      commit("changeCurrent", option.current);
      commit("changePageSize", option.page_size);
      commit("changeSearchType", option.searchType);
    }
    dispatch({
      type: "getData",
      worked: "table"
    });
  },
  getData({ dispatch, commit, state }, option) {
    var _this = this;
    commit('changeTableLoading', true);
    axios(this.getters['delStock/getData']())
    .then((req1) => {
      _this.dispatch("login/errorLogin", req1.data ).then((type) => {
        if (req1 && req1.data.result && req1.data.result!="false") {
          option.data = req1.data.result;
          commit('getData', option);
          commit('changeTotal', parseInt(req1.data.total, 10) || 0);
        } else {
          _this.commit("notice/dataError", req1.data.msg);
        }
        commit('changeTableLoading', false);
      }).catch((error) => {});
    })
    .catch((error) => {
      _this.commit("notice/dataError", error);
      commit('changeTableLoading', false);
    });
  },
  delete({ dispatch, commit, state }, option) {
    var _this = this;
    axios(this.getters['delStock/delete'](option))
    .then((req1) => {
      _this.dispatch("login/errorLogin", req1.data ).then((type) => {
        if (req1.data.success && req1.data.success!="false") {
          _this.commit("notice/delSuccess");
          dispatch({ type: "refreshData" });
        } else {
          _this.commit("notice/delError", req1.data.msg);
        }
      }).catch((error) => {});
    })
    .catch(function (error) {
      _this.commit("notice/delError", error);
    });
  }
};
